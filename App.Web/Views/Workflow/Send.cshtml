@model App.Model.Core.Workflow

@Html.Action("Header", "Workflow", new { Model.WorkflowId })

<div class="container">

    @if(Model.DefinicionWorkflow.DefinicionProcesoId == 13 && Model.DefinicionWorkflow.Secuencia == 4)
    {
    <div class="card blue-grey darken-1">
        <div class="card-content white-text">
            <span class="card-title">Notas:</span>
            <p>
                <strong>
                    Al APROBAR está autorizando simultáneamente el cometido y la compra de pasajes.
                </strong>                
            </p>
            <p>
                <strong>
                    Recuerde que se debe seleccionar el pasaje más económico.
                </strong>
                 La Circular 02/19, obliga a solicitar el pasaje aéreo más económico, en el caso de no elegirlo, la jefatura debe justificar detalladamente el por qué y será responsable de esta selección en caso de auditoría o investigación sumaria.
            </p>
        </div>
    </div>
    }


    @Html.Partial("_Message")

    @if (Model.DefinicionWorkflow.PermitirTerminar)
    {
        using (Html.BeginForm("Send", "Workflow", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(q => Model.WorkflowId)
            @Html.HiddenFor(q => Model.DefinicionWorkflow.RequiereAprobacionAlEnviar)
            @Html.HiddenFor(q => Model.DefinicionWorkflow.PermitirMultipleEvaluacion)
            @Html.HiddenFor(q => Model.DefinicionWorkflow.PermitirSeleccionarUnidadDestino)
            @Html.HiddenFor(q => Model.DefinicionWorkflow.PermitirSeleccionarPersonasMismaUnidad)
            @Html.HiddenFor(q => Model.DefinicionWorkflow.PermitirSeleccionarGrupoEspecialDestino)
            @Html.HiddenFor(q => Model.DefinicionWorkflow.Nombre)
            @Html.HiddenFor(q => Model.DefinicionWorkflow.Secuencia)

            <div class="card">
                <div class="card-content">
                    <span class="card-title">Enviar tarea</span>
                    <div class="row">
                        @if (Model.DefinicionWorkflow.RequiereAprobacionAlEnviar)
                        {
                            <div class="input-field col s12 m8 l10">
                                @Html.DropDownListFor(model => model.TipoAprobacionId, null, "Seleccione...", new { @onchange = "onchangeevent();", @id = "TipoAprobacionId" })
                                @Html.LabelFor(m => Model.TipoAprobacionId)
                                @Html.ValidationMessageFor(m => Model.TipoAprobacionId, "", new { @class = "red-text" })
                            </div>
                        }
                        @if (Model.DefinicionWorkflow.PermitirSeleccionarUnidadDestino)
                        {
                            if (!Model.DefinicionWorkflow.PermitirSeleccionarPersonasMismaUnidad)
                            {
                                <div class="input-field col s12 m8 l10">
                                    @Html.DropDownListFor(m => m.Pl_UndCod, null, "Seleccione...")
                                    @Html.LabelFor(m => Model.Pl_UndCod)
                                    @Html.ValidationMessageFor(m => Model.Pl_UndCod, "", new { @class = "red-text" })
                                </div>
                            }
                            <div class="input-field col s12 m8 l10">
                                @Html.DropDownListFor(model => model.To, null, "Seleccione...")
                                @Html.LabelFor(m => Model.To)
                                @Html.ValidationMessageFor(m => Model.To, "", new { @class = "red-text" })
                            </div>
                        }
                        @if (Model.DefinicionWorkflow.PermitirSeleccionarGrupoEspecialDestino)
                        {
                            <div class="input-field col s12 m8 l10">
                                @Html.DropDownListFor(model => model.GrupoId, null, "Seleccione...")
                                @Html.LabelFor(m => Model.GrupoId)
                                @Html.ValidationMessageFor(m => Model.GrupoId, "", new { @class = "red-text" })
                            </div>
                        }

                        <div class="input-field col s12 m8 l10">
                            @Html.TextAreaFor(m => Model.Observacion, new { @type = "textarea ", @class = "materialize-textarea" })
                            @Html.LabelFor(m => Model.Observacion)
                            @Html.ValidationMessageFor(m => Model.Observacion, "", new { @class = "red-text" })

                        </div>
                    </div>
                    <button class="waves-effect waves-light btn blue" type="submit">Enviar</button>
                </div>
            </div>
        }
    }


    @if (Model.DefinicionWorkflow.PermitirFinalizarProceso)
    {
        using (Html.BeginForm("Stop", "Workflow", FormMethod.Post))
        {
            <div class="card">
                <div class="card-content">
                    <span class="card-title">Finalizar tarea</span>
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(q => Model.WorkflowId)

                    <div class="row">
                        <div class="col s12 m8 l10">
                            @Html.LabelFor(m => Model.Observacion)
                            @Html.TextAreaFor(m => Model.Observacion, new { @type = "textarea ", @class = "materialize-textarea" })
                            @Html.ValidationMessageFor(m => Model.Observacion, "", new { @class = "red-text" })
                        </div>
                    </div>
                    <button class="waves-effect waves-light btn blue" type="submit">Finalizar</button>
                </div>
            </div>
        }
    }
    <div class="fixed-action-btn">
        <a href="javascript:history.back(-2)" class="btn-floating btn-large grey"><i class="large material-icons">chevron_left</i></a>
    </div>
</div>




<script>
    $(document).ready(function () {
        $('select').formSelect();
        $("#Pl_UndCod").change(function () {
            var Pl_UndCod = $(this).val();
            $.getJSON("/Workflow/GetUserByUnidad", { Pl_UndCod: Pl_UndCod },
                function (classesData) {
                    var select = $("#To");
                    select.empty();
                    select.append($('<option/>', {
                        value: "",
                        text: "Seleccione..."
                    }));
                    $.each(classesData, function (index, itemData) {
                        select.append($('<option/>', {
                            value: itemData.Email,
                            text: itemData.Nombre
                        }));
                    });
                    $('#To').formSelect();
                });
        });
    });
</script>
