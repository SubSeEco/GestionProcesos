@model App.Web.Controllers.ProcesoConsultorController.DTOFilter

@{
    ViewBag.Title = "Consulta de procesos";
    ViewBag.SubTitle = "Consulta de procesos";
}

<div class="grey lighten-3 section">
    <div class="container section">
        <h3 class="header">@ViewBag.Title</h3>
        <h5 class="header light">@ViewBag.SubTitle</h5>
        <div class="section"></div>
    </div>
</div>
<div class="section"></div>

<div class="container">
    <div class="card">
        <div class="card-content">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="row">
                    <div class="col s12 m6 l6">
                        <div class="row">
                            <div class="input-field col s12 m12 l12">
                                @Html.TextBoxFor(m => Model.TextSearch)
                                @Html.LabelFor(m => Model.TextSearch)
                                @Html.ValidationMessageFor(m => Model.TextSearch, "", new { @class = "red-text" })
                            </div>
                            <div class="input-field col s12 m6 l6">
                                @Html.EditorFor(m => Model.Desde)
                                @Html.LabelFor(m => Model.Desde)
                                @Html.ValidationMessageFor(m => Model.Desde, "", new { @class = "red-text" })
                            </div>
                            <div class="input-field col s12 m6 l6">
                                @Html.EditorFor(m => Model.Hasta)
                                @Html.LabelFor(m => Model.Hasta)
                                @Html.ValidationMessageFor(m => Model.Hasta, "", new { @class = "red-text" })
                            </div>
                            <div class="col s12 m12 l12">
                                @Html.LabelFor(m => Model.EstadoProcesoId)
                                @Html.DropDownListFor(m => Model.EstadoProcesoId, null, "Seleccione...", new { @class = "browser-default" })
                                @Html.ValidationMessageFor(m => Model.EstadoProcesoId, "", new { @class = "red-text" })
                            </div>
                        </div>
                    </div>
                    <div class="col s12 m6 l6">
                        <div class="row">
                            <div class="col s12 m12 l12">
                                @Html.LabelFor(m => Model.Select)<br /><br />
                                @Html.EditorFor(q => q.Select)
                            </div>
                        </div>
                    </div>
                </div>
                <button class="waves-effect waves-light btn blue" type="submit">Buscar</button>
            }
        </div>
    </div>

    @if (!Model.Result.Any())
    {
        <p>No existen resultados</p>
    }
    else
    {
        <ul class="collection">
            @foreach (var item in Model.Result.OrderByDescending(q => q.ProcesoId))
            {
                <li class="collection-item">
                    @if (item.Reservado && !item.EsAutor)
                    {
                        <span class="new badge red" data-badge-caption="Proceso reservado"></span>
                        @item.ProcesoId <text>-</text> @item.DefinicionProceso.Nombre<br />
                        <text>Creado por </text> @item.NombreFuncionario <text> el </text>@item.FechaCreacion<br />
                        <text>Estado: </text> @item.EstadoProceso.Descripcion
                    }
                    else
                    {
                        if (item.Reservado && item.EsAutor)
                        {
                            <span class="new badge red" data-badge-caption="Proceso reservado"></span>
                        }

                        @Html.ActionLink(string.Concat(item.ProcesoId, " - ", item.DefinicionProceso.Nombre), "View", item.DefinicionProceso.Entidad.Codigo, new { id = item.ProcesoId }, null)<br />
                        <text>Creado por </text> @item.NombreFuncionario <text> el </text>@item.FechaCreacion<br />
                        <text>Estado: </text> @item.EstadoProceso.Descripcion<br />

                        if (!string.IsNullOrWhiteSpace(item.Observacion))
                        {
                            <p>@Html.DisplayFor(modelItem => item.Observacion)</p>
                        }

                        if (!item.Reservado && item.DefinicionProceso.Entidad.Codigo.Contains("GD"))
                        {
                            <p>@Html.Action("Row", "GDExterno", new { item.ProcesoId })</p>
                        }
                    }
                </li>
            }
        </ul>
    }
</div>
<script>
    $(document).ready(function () {
        $('input:hidden').each(function (index, element) {
            $(element).appendTo($(element).parent());
        });
    });
</script>
