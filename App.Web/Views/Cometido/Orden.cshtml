@model App.Model.Cometido.Cometido
@{
    Layout = null;
}
@Html.HiddenFor(q => q.WorkflowId)

<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <style TYPE="text/css">
        .breakhere {
            page-break-after: always
        }
    </style>
</head>

<body style="font-family:Calibri;font-size:9;line-height:11px;text-align:justify;text-justify:auto">
    <table style="margin-top:768px">
        <tr>
            <td width="32%">
                .<img src="http://cdc.economia.cl/Styles/images/logo_gobierno_membrete.png" width="170px" />
            </td>
            <td>
                <!--<p align="justify">
                    <strong>
                        ORDEN DE PAGO N°  @Html.DisplayFor(m => Model.Folio)-->
                @*@Html.DisplayFor(m => Model.NumeroResolucion)*@
                <!--</strong>
                    <br /><br />
                          <strong>
                              SANTIAGO,
                              @if (Model.Firma == true)
                              {
                                  @Html.DisplayFor(m => Model.FechaResolucion).ToHtmlString().Remove(10)
                              }
                          </strong>
                    <br />

                </p>-->
            </td>
        </tr>
        <tr>
            <td>
                <h6>
                    <p align="left">
                        DEPARTAMENTO ADMINISTRATIVO<br />
                        GESTIÓN DE PERSONAS<br />
                        N° OP :@Html.DisplayFor(m => Model.CometidoId)
                    </p>
                </h6>
                <br />
                <table border="1">
                    <tr>
                        <td colspan="2">
                            <h5>
                                <p ALIGN="center">
                                    Comprometido Finanzas<br />
                                </p>
                            </h5>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <h6>
                                ID @*/ CODIGO*@
                            </h6>
                        </td>
                        <td>
                            <h6>
                                @Html.DisplayFor(m => Model.GeneracionCDP.FirstOrDefault().VtcIdCompromiso) @*/ @Html.DisplayFor(m => Model.GeneracionCDP.FirstOrDefault().VtcCodCompromiso)*@
                            </h6>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <h6>
                                MONTO
                            </h6>
                        </td>
                        <td>
                            <h6>
                                @Html.DisplayFor(m => Model.TotalViatico)
                            </h6>
                        </td>
                    </tr>
                </table>
            </td>
            <td>
                <strong>
                    <br /><br /><br /><br /><br /> VISTOS:
                </strong>
                <p align="justify" style="margin-right:30px">
                    @Html.DisplayFor(m => Model.Vistos)
                </p>
            </td>
        </tr>
        <tr>
            @*<td></td>*@
            <td colspan="2">
                <strong>
                   <br /> CONSIDERANDO:
                </strong>
                @if (Model.Destinos.FirstOrDefault().FechaInicio < DateTime.Now) /*Tiempoo pasado*/
                {
                    <p align="justify" style="margin-right:30px">
                        Que, por efectuada la solicitud fuera de los plazos establecidos en procedimientos internos de la Subsecretaría de Economía y Empresas de Menor Tamaño, se debe tramitar este cometido de forma extemporánea.
                    </p>
                }
                <p align="justify" style="margin-right:30px">
                    Que, don/ña
                    <strong>@Html.DisplayFor(m => Model.Nombre)</strong>
                    @Html.Raw(",")&nbsp;&nbsp;&nbsp;Rut N° <strong> @Html.DisplayFor(m => Model.Rut)@Html.Raw("-")@Html.DisplayFor(m => Model.DV)</strong>, prestador(a) de servicios a honorarios suma alzada con desempeño en
                    <strong>@Html.DisplayFor(m => Model.UnidadDescripcion)</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    @if (Model.Tiempo == "Pasado")
                    {
                        @Html.Raw("<span>realizó</span>")
                    }
                    else
                    {
                        @Html.Raw("<span>realizará</span>")
                    }
                    labores específicas inherentes a los servicios establecidas en su contrato de prestación de servicios, por el plazo de
                    @Html.DisplayFor(m => Model.Dias) día
                    @if (Model.Dias.Value != 1)
                    {
                        @Html.DisplayFor(m => Model.DiasPlural)
                    }
                    a contar de @Html.DisplayFor(m => Model.Destinos.FirstOrDefault().FechaInicio).ToHtmlString().Remove(10) y hasta @Html.DisplayFor(m => Model.Destinos.LastOrDefault().FechaHasta.Date).ToHtmlString().Remove(10), en la:
                </p>
                <br />
                <table border="1" width="100%" style="margin-right:30px">
                    <tr>
                        <td style="border-style: solid; border-width: 1px; border-color: #000000;">
                            COMUNA
                        </td>
                        <td style="border-style: solid; border-width: 1px; border-color: #000000;">
                            REGION
                        </td>
                    </tr>
                    @for (int i = 0; i < Model.Destinos.ToArray().Length; i++)
                    {
                        <tr>

                            @Html.HiddenFor(q => Model.Destinos.ToArray()[i].DestinoId)
                            <td>
                                @Html.DisplayFor(modelItem => Model.Destinos.ToArray()[i].ComunaDescripcion)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => Model.Destinos.ToArray()[i].RegionDescripcion)
                            </td>

                        </tr>
                    }
                </table>
                @*@if (Model.SolicitaViatico == false)
                    {
                        <p align="justify">
                            Que la actividad realizada no
                            @if (Model.Tiempo == "Pasado")
                            {
                                @Html.Raw("<span>generó</span>")
                            }
                            else
                            {
                                @Html.Raw("<span>genera</span>")
                            }
                            costo para esta Subsecretaría.<br />
                        </p>
                    }*@
            </td>
        </tr>
        <tr>
            @*<td></td>*@
            <td colspan="2">
                @if (Model.SolicitaViatico == true)
                {
                <p align="justify" style="margin-right:30px">
                    <br />
                    <strong>ORDÉNESE EL PAGO</strong>
                    &nbsp; ascendente a la suma de $@Html.DisplayFor(m => Model.TotalViatico).- pesos, (@Html.DisplayFor(m => Model.Destinos.FirstOrDefault().TotalViaticoPalabras))<br />
                    por concepto de honorario adicional, producto de labores específicas inherentes a los servicios establecidos en su contrato de prestación de servicios, de acuerdo al siguiente detalle:
                </p>
                    <br />
                    <table border="1" width="100%" style="margin-right:30px">
                        <tr>
                            <td>
                                @Html.DisplayNameFor(m => Model.Destinos.FirstOrDefault().ComunaDescripcion)
                            </td>
                            <td>
                                @Html.DisplayNameFor(m => Model.Destinos.FirstOrDefault().FechaInicio)
                            </td>
                            <td>
                                @Html.DisplayNameFor(m => Model.Destinos.FirstOrDefault().FechaHasta)
                            </td>
                            <td>
                                @*@Html.DisplayNameFor(m => Model.Destinos.FirstOrDefault().Dias100)*@
                                @Html.Raw("Dias 100%")
                            </td>
                            <td>
                                @*@Html.DisplayNameFor(m => Model.Destinos.FirstOrDefault().Dias60)*@
                                @Html.Raw("Dias 60%")
                            </td>
                            <td>
                                @*@Html.DisplayNameFor(m => Model.Destinos.FirstOrDefault().Dias40)*@
                                @Html.Raw("Dias 40%")
                            </td>
                            @*<td>
                                    @Html.DisplayNameFor(m => Model.Destinos.FirstOrDefault().Dias40Monto)
                                </td>
                                <td>
                                    @Html.DisplayNameFor(m => Model.Destinos.FirstOrDefault().Dias00Monto)
                                </td>*@
                        </tr>
                        @for (int i = 0; i < Model.Destinos.ToArray().Length; i++)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => Model.Destinos.ToArray()[i].ComunaDescripcion)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => Model.Destinos.ToArray()[i].FechaInicio.Date).ToHtmlString().Remove(10)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => Model.Destinos.ToArray()[i].FechaHasta.Date).ToHtmlString().Remove(10)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => Model.Destinos.ToArray()[i].Dias100Aprobados)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => Model.Destinos.ToArray()[i].Dias60Aprobados)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => Model.Destinos.ToArray()[i].Dias40Aprobados)
                                </td>
                                @*<td>
                                        @Html.DisplayFor(modelItem => Model.Destinos.ToArray()[i].Dias40Monto)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => Model.Destinos.ToArray()[i].Dias00Monto)
                                    </td>*@
                            </tr>
                        }
                    </table>
                    <br />
                }
            </td>
        </tr>
        <tr>
            @*<td></td>*@
            <td colspan="2">
                <strong>DÉJASE CONSTANCIA:</strong>
                @if (Model.Vehiculo == true)
                {
                    <p>
                        Que, don/ña
                        <strong>@Html.DisplayFor(m => Model.Nombre)</strong>

                        @if (Model.Tiempo == "Pasado")
                        {
                            @Html.Raw("<span>usó</span>")
                        }
                        else
                        {
                            @Html.Raw("<span>usará</span>")
                        }
                        como medio de transporte el @Html.DisplayFor(m => Model.TipoVehiculoDescripcion).
                    </p>
                }
                <p align="justify"></p>
                @if ((Model.SolicitaViatico == false && Model.ReqPasajeAereo == false) && Model.TotalViatico == 0)
                {
                    @Html.DisplayFor(m => Model.DejaseConstancia)

                    <p align="justify" style="margin-right:30px">
                        Que, la presente orden de pago no
                        @if (Model.Tiempo == "Pasado")
                        {
                            @Html.Raw("<span>irrogó</span>")
                        }
                        else
                        {
                            @Html.Raw("<span>irrogará</span>")
                        }
                        gastos de honorario adicional para la Subsecretaría de Economía y Empresas de Menor Tamaño.
                    </p>
                }
                @if (Model.ReqPasajeAereo == true)
                {
                    <p align="justify" style="margin-right:30px">
                        Que, esta Subsecretaría pagará a <strong> @Html.DisplayFor(m => Model.Nombre)</strong>, los gastos de pasajes aéreos.
                    </p>
                }
                <p align="justify"></p>
                @if (Model.Tiempo == "Pasado")
                {
                    <p align="justify" style="margin-right:30px">
                        Que, por razones impostergables de buen servicio, no fue necesario esperar la total tramitación de esta orden de pago para iniciarla.
                    </p>
                }
                <p align="justify" style="margin-right:30px">
                    Que, la Subsecretaría de Economía y Empresas de Menor Tamaño, reembolsará los gastos que se irroguen a consecuencia de los servicios prestados, así como también otros gastos derivados,
                    siempre y cuando se encuentren debidamente justificados y documentados, de acuerdo a la normativa interna que regule esta materia y al contrato de prestaciones de servicios respectivo,
                    con cargo al ítem o los ítems y asignaciones correspondientes al subtítulo 22
                    @*@Html.DisplayFor(m => Model.GeneracionCDP.FirstOrDefault().TipoSubTitulo.TstNombre)@Html.Raw(".")
                        @Html.DisplayFor(m => Model.GeneracionCDP.FirstOrDefault().TipoItem.TitNombre)@Html.Raw(".")
                        @Html.DisplayFor(m => Model.GeneracionCDP.FirstOrDefault().TipoAsignacion.TasNombre)*@
                    de acuerdo a su naturaleza.
                </p>
                <p class="breakhere"></p>
                </tdcols>
        </tr>
        <tr><td></td><td></td></tr>
        <tr>
            @*<td></td>*@
            <td colspan="2">
                @if (Model.GeneracionCDP.Count > 0)
                {
                    <p align="justify" style="margin-right:30px">
                        <strong>IMPÚTESE</strong>,
                        @if (Model.SolicitaViatico == true)
                        {
                            if (Model.GeneracionCDP.FirstOrDefault().TipoSubTitulo.TstNombre != "24")
                            {
                                @Html.Raw("<span> el gasto por honorarios adicionales al Programa </span>") @Html.DisplayFor(m => Model.ProgramaDescripcion).ToString().Substring(1, 2)
                                if (Model.SolicitaViatico == true)
                                {
                                    @Html.Raw(", al Subtítulo ")
                                    @Html.DisplayFor(m => Model.GeneracionCDP.FirstOrDefault().TipoSubTitulo.TstNombre)@Html.Raw(".")
                                    @Html.DisplayFor(m => Model.GeneracionCDP.FirstOrDefault().TipoItem.TitNombre)@Html.Raw(".")
                                    @Html.DisplayFor(m => Model.GeneracionCDP.FirstOrDefault().TipoAsignacion.TasNombre)
                                    if (Model.GeneracionCDP.FirstOrDefault().TipoSubTitulo.TstNombre == "24")
                                    {
                                        @Html.DisplayFor(m => Model.UnidadDescripcion)
                                    }
                                    else
                                    {
                                        @Html.Raw(" y al subtítulo 22, ")
                                    }
                                }
                                if (Model.SolicitaViatico == false)
                                {
                                    if (Model.GeneracionCDP.FirstOrDefault().TipoSubTitulo.TstNombre != "24")
                                    {
                                        @Html.Raw(" y al subtítulo 22, ")
                                    }
                                }
                                @Html.Raw(" por los gastos que se irroguen a consecuencia del desempeño de funciones inherentes a las funciones establecidas en su contrato, de acuerdo a su naturaleza, del presupuesto para el año ")
                                @Html.DisplayFor(m => Model.Anno)
                                @Html.Raw(" de la ")
                                @Html.DisplayFor(m => Model.Subscretaria)
                            }
                            if (Model.GeneracionCDP.FirstOrDefault().TipoSubTitulo.TstNombre == "24")
                            {
                                @Html.Raw("<span>el gasto por honorarios adicionales al Programa </span>") @Html.DisplayFor(m => Model.ProgramaDescripcion).ToString().Substring(1, 2)
                                @Html.Raw(", al Subtítulo ")
                                @Html.DisplayFor(m => Model.GeneracionCDP.FirstOrDefault().TipoSubTitulo.TstNombre)@Html.Raw(".")
                                @Html.DisplayFor(m => Model.GeneracionCDP.FirstOrDefault().TipoItem.TitNombre)@Html.Raw(".")
                                @Html.DisplayFor(m => Model.GeneracionCDP.FirstOrDefault().TipoAsignacion.TasNombre)
                                if (Model.GeneracionCDP.FirstOrDefault().TipoSubTitulo.TstNombre == "24")
                                {
                                    @Html.DisplayFor(m => Model.UnidadDescripcion)
                                }
                                @Html.Raw("por los gastos que se irroguen a consecuencia del desempeño de funciones  inherentes a las funciones establecidas en su contrato, de acuerdo a su naturaleza, del presupuesto para el año ")
                                @Html.DisplayFor(m => Model.Anno)
                                @Html.Raw(" de la ")
                                @Html.DisplayFor(m => Model.Subscretaria)
                            }
                        }
                        @*@if (Model.SolicitaViatico != true)
                            {
                                @Html.Raw("<span>el gasto por honorarios adicionales al Programa</span>") @Html.DisplayFor(m => Model.ProgramaDescripcion)
                                @Html.Raw(",y al Subtítulo 22")
                                @Html.Raw("por los gastos que se irroguen a consecuencia del desempeño de funciones inherentes a las funciones establecidas en su contrato, de acuerdo a su naturaleza, del presupuesto para el año")
                                @Html.DisplayFor(m => Model.Anno)
                                @Html.Raw("de la ")
                                @Html.DisplayFor(m => Model.Subscretaria)
                            }*@
                    </p>
                }
                @if (Model.SolicitaViatico != true)
                {
                    <p align="justify" style="margin-right:30px">
                        <strong>IMPÚTESE</strong>,
                        @Html.Raw("<span> el gasto por honorarios adicionales al Programa </span>") @Html.DisplayFor(m => Model.ProgramaDescripcion).ToString().Substring(1, 2)
                        @Html.Raw(",y al Subtítulo 22 ")
                        @Html.Raw("por los gastos que se irroguen a consecuencia del desempeño de funciones inherentes a las funciones establecidas en su contrato, de acuerdo a su naturaleza, del presupuesto para el año ")
                        @Html.DisplayFor(m => Model.Anno)
                        @Html.Raw(" de la ")
                        @Html.DisplayFor(m => Model.Subscretaria)
                    </p>
                }

            </td>
        </tr>
    </table>
    <table align="center" border="0">
        <tr>
            <td>
                <br />
                <p align="center">
                    <strong>ANÓTESE, COMUNÍQUESE, REGÍSTRESE EN LA CONTRALORÍA GENERAL DE LA REPÚBLICA Y ARCHÍVESE.</strong>

                    <br />
                    <strong>
                        @Html.DisplayFor(m => Model.Orden)
                    </strong>
                    <br /><br /><br />
                </p>
            </td>
        </tr>
        <tr>
            <td>
                <strong>
                    <p align="center">
                        @*@Html.DisplayFor(m => Model.Firmante)*@
                        <br />
                        @Html.DisplayFor(m => Model.CargoFirmante)
                        <br />
                        @Html.DisplayFor(m => Model.Subscretaria)
                    </p>
                </strong>
            </td>
            <td></td>
        </tr>
    </table>
</body>
</html>