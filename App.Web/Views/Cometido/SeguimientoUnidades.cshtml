@model App.Web.Controllers.CometidoController.DTOFilterCometido
<div class="grey lighten-3">
    <div class="container">
        <div class="section">
            <h3 class="header">Reporte seguimiento Unidades</h3>
            <br />
        </div>
    </div>
</div>

<div class="container">
    <div class="row">

        <div class="card">
            <div class="card-content">
                <span class="card-title">Filtros</span>
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="row">
                        <div class="input-field col s12 m12 l12">
                            @Html.TextBoxFor(m => Model.ID)
                            @Html.LabelFor(m => Model.ID)
                            @Html.ValidationMessageFor(m => Model.ID, "", new { @class = "red-text" })
                        </div>
                        <div class="input-field col s12 m12 l12">
                            @*@Html.EditorFor(m => Model.Ejecutor)*@
                            @Html.DropDownListFor(m => Model.Ejecutor, null, "Seleccione...")
                            @Html.LabelFor(m => Model.Ejecutor)
                            @Html.ValidationMessageFor(m => Model.Ejecutor, "", new { @class = "red-text" })
                        </div>
                        <div class="input-field col s12 m12 l12">
                            @Html.EditorFor(m => Model.FechaInicio)
                            @Html.LabelFor(m => Model.FechaInicio)
                            @Html.ValidationMessageFor(m => Model.FechaInicio, "", new { @class = "red-text" })
                        </div>
                        <div class="input-field col s12 m12 l12">
                            @Html.EditorFor(m => Model.FechaTermino)
                            @Html.LabelFor(m => Model.FechaTermino)
                            @Html.ValidationMessageFor(m => Model.FechaTermino, "", new { @class = "red-text" })
                        </div>
                        <div class="input-field col s12 m12 l12">
                            @Html.EditorFor(m => Model.FechaSolicitud)
                            @Html.LabelFor(m => Model.FechaSolicitud)
                            @Html.ValidationMessageFor(m => Model.FechaSolicitud, "", new { @class = "red-text" })
                        </div>
                    </div>
                    <button class="waves-effect waves-light btn blue" type="submit">Buscar</button>
                    @Html.ActionLink("Descargar Excel", "DownloadSeguimiento", "Cometido")
                }
            </div>
        </div>

        <div class="col s12 m12 l12">
            <div class="card">
                <div class="card-content">
                    <table>
                        <tr>
                            <th style="width:100px">
                                @Html.DisplayNameFor(model => model.Result.FirstOrDefault().Subscretaria)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ID)
                            </th>
                            <th style="width:100px">
                                @Html.DisplayNameFor(model => model.Result.FirstOrDefault().Nombre)
                            </th>
                            <th style="width:100px">
                                @Html.DisplayNameFor(model => model.Result.FirstOrDefault().FechaSolicitud)
                            </th>
                            <th>
                                <table>
                                    <tr>
                                        <th>
                                            @Html.DisplayNameFor(model => model.Ejecutor)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.Result.FirstOrDefault().UnidadDescripcion)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.Result.FirstOrDefault().Proceso.Workflows.FirstOrDefault().FechaCreacion)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.Result.FirstOrDefault().Proceso.Workflows.FirstOrDefault().FechaTermino)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.DiasDiferencia)
                                        </th>
                                        <th>
                                            @Html.Raw("<span>Etapa</span>")
                                        </th>
                                    </tr>
                                </table>
                            </th>
                        </tr>

                        @foreach (var item in Model.Result.OrderByDescending(c => c.CometidoId))
                        {
                            <tr>
                                <td>
                                    @if (item.UnidadDescripcion.Contains("Turismo"))
                                    {
                                        <p>SUBSECRETARIA DE TURISMO</p>
                                    }
                                    else
                                    {
                                        <p>SUBSECRETARIA DE ECONOMÍA Y EMPRESAS DE MENOR TAMAÑO</p>
                                    }

                                    @Html.DisplayFor(modelItem => item.Subscretaria)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CometidoId)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Nombre)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.FechaSolicitud).ToHtmlString().Remove(10)
                                </td>
                                <td>
                                    @foreach (var t in item.Proceso.Workflows.Where(c => c.ProcesoId == item.ProcesoId))
                                    {
                                        <table>
                                            <tr>
                                                <td style="text-align:left;width:50px">
                                                    @Html.DisplayFor(modelItem => t.Email).ToString().Trim()
                                                </td>
                                                <td style="text-align:left;width:50px">
                                                    @Html.DisplayFor(modelItem => t.Pl_UndDes).ToString().Trim()
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => t.FechaCreacion).ToHtmlString().Remove(10)
                                                </td>
                                                <td>
                                                    @if (t.FechaTermino.HasValue)
                                                    {
                                                        @Html.DisplayFor(modelItem => t.FechaTermino.Value).ToHtmlString().Remove(10)
                                                    }
                                                </td>
                                                <td>
                                                    @{
                                                        int dif = 0;
                                                        if (t.FechaTermino.HasValue)
                                                        {
                                                            dif = (t.FechaTermino.Value - t.FechaCreacion).Days + 1;
                                                        }
                                                        else
                                                        {
                                                            t.FechaTermino = DateTime.Now;
                                                            dif = (t.FechaTermino.Value - t.FechaCreacion).Days + 1;
                                                        }

                                                        <p>@dif</p>
                                                    }
                                                </td>
                                                <td style="text-align:left;width:50px">
                                                    @Html.DisplayFor(modelItem => t.DefinicionWorkflow.Nombre)
                                                </td>
                                            </tr>
                                        </table>

                                    }
                                </td>
                            </tr>
                        }
                    </table>
                </div>
            </div>
        </div>

    </div>
</div>
<div class="fixed-action-btn">
    <a href="javascript:history.back()" class="btn-floating btn-large grey"><i class="large material-icons">chevron_left</i></a>
</div>

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script>
    $(document).ready(function () {
        $('select').formSelect();
        $('input:hidden').each(function (index, element) {
            $(element).appendTo($(element).parent());
        });
    });
</script>
